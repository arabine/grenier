Freeware assember ASxx.EXE Ver 1.03.
0001                         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0002                         ;
0003                         ;     	clignote.asm
0004                         ;
0005                         ;     	Clignotement d'une led sur 
0006                         ;	PB0, a la frequence de 1 Hz
0007                         ;
0008                         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0009                         
0010 1000                    RAM		EQU	$1000
0011 10ff                    STACK		EQU	RAM+$FF		;put stack at top of ram
0012 f800                    EEPROM		EQU	$F800
0013                         
0014                         * registers
0015                         
0016 0000                    RBASE	EQU	$0000
0017                         
0018 0000                    PORTA	EQU	RBASE+$00
0019 0002                    PIOC	EQU	RBASE+$02
0020 0003                    PORTC	EQU	RBASE+$03
0021 0004                    PORTB	EQU	RBASE+$04
0022 0005                    PORTCL	EQU	RBASE+$05
0023 0007                    DDRC	EQU	RBASE+$07
0024 0008                    PORTD	EQU	RBASE+$08
0025 0009                    DDRD	EQU	RBASE+$09
0026 000a                    PORTE	EQU	RBASE+$0A
0027 000b                    CFORC	EQU	RBASE+$0B
0028 000c                    OC1M	EQU	RBASE+$0C
0029 000d                    OC1D	EQU	RBASE+$0D
0030 000e                    TCNT	EQU	RBASE+$0E
0031 0010                    TIC1	EQU	RBASE+$10
0032 0012                    TIC2	EQU	RBASE+$12
0033 0014                    TIC3	EQU	RBASE+$14
0034 0016                    TOC1	EQU	RBASE+$16
0035 0018                    TOC2	EQU	RBASE+$18
0036 001a                    TOC3	EQU	RBASE+$1A
0037 001c                    TOC4	EQU	RBASE+$1C
0038 001e                    TI4O5	EQU	RBASE+$1E
0039 0020                    TCTL1	EQU	RBASE+$20
0040 0021                    TCTL2	EQU	RBASE+$21
0041 0022                    TMSK1	EQU	RBASE+$22
0042 0023                    TFLG1	EQU	RBASE+$23
0043 0024                    TMSK2	EQU	RBASE+$24
0044 0025                    TFLG2	EQU	RBASE+$25
0045 0026                    PACTL	EQU	RBASE+$26
0046 0027                    PACNT	EQU	RBASE+$27
0047 0028                    SPCR	EQU	RBASE+$28
0048 0029                    SPSR	EQU	RBASE+$29
0049 002a                    SPDR	EQU	RBASE+$2A
0050 002b                    BAUD	EQU	RBASE+$2B
0051 002c                    SCCR1	EQU	RBASE+$2C
0052 002d                    SCCR2	EQU	RBASE+$2D
0053 002e                    SCSR	EQU	RBASE+$2E
0054 002f                    SCDR	EQU	RBASE+$2F
0055 0030                    ADCTL	EQU	RBASE+$30
0056 0031                    ADR1	EQU	RBASE+$31
0057 0032                    ADR2	EQU	RBASE+$32
0058 0033                    ADR3	EQU	RBASE+$33
0059 0034                    ADR4	EQU	RBASE+$34
0060 0035                    BPROT	EQU	RBASE+$35
0061 0039                    OPTION	EQU	RBASE+$39
0062 003a                    COPRST	EQU	RBASE+$3A
0063 003b                    PPROG	EQU	RBASE+$3B
0064 003c                    HPRIO	EQU	RBASE+$3C
0065 103d                    INIT	EQU	$103D		; fixed before use
0066 003e                    TEST1	EQU	RBASE+$3E
0067 003f                    CONFIG	EQU	RBASE+$3F
0068                         
0069                         ; Program
0070                         
0071 f800                    	ORG	EEPROM
0072                         
0073                         init:
0074 f800 86 10                      LDAA    #$10
0075 f802 b7 10 3d                   STAA    INIT            ;RAM at $1000, Registers at $0000
0076 f805 0f                 	SEI			;inhibits interrupts
0077 f806 8e 10 ff           	LDS	#STACK	 	;initialize stack pointer
0078                         
0079                         boucle:
0080 f809 14 04 01           	BSET	PORTB %00000001	;allumage de la led
0081                         
0082 f80c 86 05              	LDAA	#5
0083 f80e 8d 09              	BSR	tempo		;temporisation de 0,5 seconde
0084                         
0085 f810 15 04 01           	BCLR	PORTB %00000001 ;extinction de la led
0086                         
0087 f813 86 05              	LDAA	#5
0088 f815 8d 02              	BSR	tempo		;temporisation de 0,5 seconde
0089                         
0090 f817 20 f0              	BRA	boucle		;recommence
0091                         
0092                         ; Procedures
0093                         
0094                         ;temporisation de duree : Accu A * 0.1s (quartz 8MHz)
0095                         ;duree : de 0.1s à 25.5s
0096                         ;argument : Accu A
0097                         
0098 8234                    val	EQU	33332		; tempo=A*0.1s (3332 pour 0.01s)
0099                         tempo:
0100 f819 3c                         PSHX                    ; sauvegarde de X
0101 f81a ce 82 34           _tmp1   LDX     #val
0102 f81d 09                 _tmp2   DEX
0103 f81e 26 fd                      BNE     _tmp2
0104 f820 4a                         DECA
0105 f821 26 f7                      BNE     _tmp1
0106 f823 38                         PULX
0107 f824 39                         RTS
0108                         
0109                         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0110                         
0111 ffd6                    	ORG	$FFD6
0112                         
0113                         ;  Interrupt and reset vectors.
0114                         
0115 ffd6 f8 00              SCI_VECT	FDB	init
0116 ffd8 f8 00              SPI_VECT	FDB	init
0117 ffda f8 00              PAI_VECT	FDB	init
0118 ffdc f8 00              PAO_VECT	FDB	init
0119 ffde f8 00              TOF_VECT	FDB	init
0120                         
0121 ffe0 f8 00              TOC5_VECT	FDB	init
0122 ffe2 f8 00              TOC4_VECT	FDB	init
0123 ffe4 f8 00              TOC3_VECT	FDB	init
0124 ffe6 f8 00              TOC2_VECT	FDB	init
0125 ffe8 f8 00              TOC1_VECT	FDB	init
0126 ffea f8 00              TIC3_VECT	FDB	init
0127 ffec f8 00              TIC2_VECT	FDB	init
0128 ffee f8 00              TIC1_VECT	FDB	init
0129                         
0130 fff0 f8 00              RTI_VECT	FDB	init
0131 fff2 f8 00              IRQ_VECT	FDB	init
0132 fff4 f8 00              XIRQ_VECT	FDB	init
0133 fff6 f8 00              SWI_VECT	FDB	init
0134 fff8 f8 00              TRAP_VECT	FDB	init
0135 fffa f8 00              COP_FAIL_VECT	FDB	init
0136 fffc f8 00              COP_CMF_VECT	FDB	init
0137 fffe f8 00              RESET_VECT	FDB	init
0138                         


Number of errors 0
